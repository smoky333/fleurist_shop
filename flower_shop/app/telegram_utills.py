import os
import asyncio
import threading
import logging
from aiogram import Bot

logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ chat_id
BOT_TOKEN = os.getenv("BOT_TOKEN", "–≤–∞—à —Ç–æ–∫–µ–Ω")
ADMIN_CHAT_ID = os.getenv("ADMIN_CHAT_ID", "5285694652")

bot = Bot(token=BOT_TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π
loop = asyncio.new_event_loop()

def start_loop(loop):
    """–ó–∞–ø—É—Å–∫ event loop –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
    asyncio.set_event_loop(loop)
    loop.run_forever()

thread = threading.Thread(target=start_loop, args=(loop,), daemon=True)
thread.start()

def run_in_loop(coro):
    """–ó–∞–ø—É—Å–∫ –∫–æ—Ä—É—Ç–∏–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º event loop."""
    return asyncio.run_coroutine_threadsafe(coro, loop)

async def send_order_to_telegram_async(order):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤ Telegram."""
    caption = (
        f"üéâ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\n"
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å*: {order.user.username}\n"
        f"üí∞ *–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞*: {order.total_price} ‚Ç¨\n"
        f"üìÖ *–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞*: {order.created_at.strftime('%d.%m.%Y %H:%M')}"
    )
    try:
        await bot.send_message(ADMIN_CHAT_ID, caption, parse_mode="Markdown")
        logger.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ Telegram: {e}")

async def send_status_change_to_telegram_async(order):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞."""
    caption = (
        f"üì¢ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞!*\n\n"
        f"üõí –ó–∞–∫–∞–∑ ‚Ññ{order.id}\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {order.user.username}\n"
        f"üí∞ –°—É–º–º–∞: {order.total_price} ‚Ç¨\n"
        f"‚û°Ô∏è –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {order.status}"
    )
    try:
        await bot.send_message(ADMIN_CHAT_ID, caption, parse_mode="Markdown")
        logger.info("–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞: {e}")
